{"ast":null,"code":"var _jsxFileName = \"/Users/deepinthepowderblue/Documents/GitHub/testingWallet/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { PublicKey, Transaction, Connection, LAMPORTS_PER_SOL, StakeProgram, Authorized, Lockup } from \"@solana/web3.js\"; // import Web3  from \"web3\";\n\nimport { WelldoneWalletAdapter } from \"./welldone\";\nimport \"./App.css\"; // const web3 = new Web3(\"https://ethereum-rinkeby-rpc.allthatnode.com\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [provider, setProvider] = useState(undefined);\n  const [walletKey, setWalletKey] = useState(undefined);\n  const [metamaskKey, setMetamaskKey] = useState();\n  const [keplrKey, setKeplrKey] = useState();\n  /**\n   * @description gets Phantom provider, if it exists\n   */\n\n  const getProvider = () => {\n    if (\"solana\" in window) {\n      // @ts-ignore\n      const provider = window.solana;\n      if (provider.isPhantom) return provider;\n    }\n  };\n  /*\n   * @description prompts user to connect wallet if it exists\n   */\n\n\n  const connectWallet = async () => {\n    // @ts-ignore\n    const {\n      solana\n    } = window;\n\n    if (solana) {\n      try {\n        const response = await solana.connect();\n        console.log(\"wallet account \", response.publicKey.toString());\n        setWalletKey(response.publicKey.toString());\n      } catch (err) {// { code: 4001, message: 'User rejected the request.' }\n      }\n    }\n  };\n  /*\n   * @description disconnect Phantom wallet\n   */\n\n\n  const disconnectWallet = async () => {\n    // @ts-ignore\n    const {\n      solana\n    } = window;\n\n    if (walletKey && solana) {\n      await solana.disconnect();\n      setWalletKey(undefined);\n    }\n  };\n\n  const connectMetamask = async () => {\n    // @ts-ignore\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      try {\n        const response = await ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        console.log(response);\n        setMetamaskKey(response);\n      } catch (error) {}\n    }\n  };\n\n  const disconnectMetamask = async () => {\n    // @ts-ignore\n    const {\n      ethereum\n    } = window;\n\n    if (metamaskKey && ethereum) {\n      await ethereum.request({\n        method: \"eth_requestAccounts\",\n        params: [{\n          eth_accounts: {}\n        }]\n      });\n      setMetamaskKey(undefined);\n    }\n  };\n\n  const connectKeplr = async () => {\n    // @ts-ignore\n    const {\n      keplr\n    } = window;\n\n    if (keplr) {\n      try {\n        const chainId = \"cosmoshub-4\";\n        await keplr.enable(chainId);\n        const offLineSigner = keplr.getOfflineSigner(chainId);\n        console.log(1111, offLineSigner);\n        const accounts = await offLineSigner.getAccounts();\n        console.log(1111, accounts);\n        console.log(accounts);\n        setKeplrKey(accounts);\n      } catch (error) {}\n    }\n  };\n\n  async function getStakeAccount(stakeAccountSeed, fromPublicKey) {\n    const stakePubkey = await PublicKey.createWithSeed(fromPublicKey, stakeAccountSeed, StakeProgram.programId); // eslint-disable-next-line no-console\n\n    console.log(\"stakePubkey - \", stakePubkey.toString());\n    return stakePubkey;\n  }\n\n  const sendTx = async () => {\n    // @ts-ignore\n    const {\n      solana\n    } = window;\n    const network = \"https://api.devnet.solana.com\";\n    const connection = new Connection(network);\n    const RECENTBLOCKHASH = await connection.getLatestBlockhash();\n    const ACCOUNTPUBKEY = new PublicKey(\"8cXTm3AgfW6xVduFzC64FW1Pjx6aPPmtNwySqVLLJRq7\");\n    const timeStamp = new Date().getTime();\n    const STAKEACCOUNTSEED = timeStamp.toString();\n    const stakePubkey = await getStakeAccount(STAKEACCOUNTSEED, ACCOUNTPUBKEY);\n    const votePubkey = new PublicKey(\"3NZ1Wa2spvK6dpbVBhgTh2qfjzNA6wxEAdXMsJJQCDQG\");\n    const transaction = new Transaction({\n      recentBlockhash: RECENTBLOCKHASH.blockhash,\n      feePayer: ACCOUNTPUBKEY\n    });\n    transaction.add(StakeProgram.createAccountWithSeed({\n      fromPubkey: ACCOUNTPUBKEY,\n      stakePubkey: stakePubkey,\n      basePubkey: ACCOUNTPUBKEY,\n      seed: STAKEACCOUNTSEED,\n      authorized: new Authorized(ACCOUNTPUBKEY, ACCOUNTPUBKEY),\n      lockup: new Lockup(0, 0, new PublicKey(0)),\n      lamports: Number(0.1) * LAMPORTS_PER_SOL\n    }), // Delegate\n    StakeProgram.delegate({\n      stakePubkey: stakePubkey,\n      authorizedPubkey: ACCOUNTPUBKEY,\n      votePubkey: votePubkey\n    }));\n\n    if (walletKey && solana) {\n      const {\n        signature\n      } = await solana.signAndSendTransaction(transaction);\n      await connection.confirmTransaction(signature);\n      const wallet = new WelldoneWalletAdapter(); // await wallet.connect();\n\n      await wallet.signAndSendTransaction(transaction);\n    }\n  };\n\n  const sendMetamaskTx = async () => {\n    // @ts-ignore\n    const {\n      ethereum\n    } = window;\n\n    try {\n      const transactionParameters = {\n        from: ethereum.selectedAddress,\n        to: ethereum.selectedAddress,\n        value: Number(30000000000000000).toString(16),\n        gasPrice: Number(\"3000000000000\").toString(16),\n        gas: \"0x2710\" // data: '',\n\n      };\n      const txHash = await ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [transactionParameters]\n      });\n      console.log(119, txHash);\n    } catch (error) {}\n  }; // detect phantom provider exists\n\n\n  useEffect(() => {\n    const provider = getProvider();\n    if (provider) setProvider(provider);else setProvider(undefined);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tutorial: Connect to Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), provider && !walletKey && !metamaskKey && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\"\n          },\n          onClick: connectWallet,\n          children: \"Connect to Phantom Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\"\n          },\n          onClick: connectMetamask,\n          children: \"Connect to Meta mask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\"\n          },\n          onClick: connectKeplr,\n          children: \"Connect to keplr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), provider && walletKey && !metamaskKey && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Connected account \", walletKey]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\",\n            margin: \"15px auto\"\n          },\n          onClick: disconnectWallet,\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\",\n            margin: \"15px auto\"\n          },\n          onClick: sendTx,\n          children: \"SendTX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), provider && !walletKey && metamaskKey && !keplrKey && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Connected account \", metamaskKey]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\",\n            margin: \"15px auto\"\n          },\n          onClick: disconnectMetamask,\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\",\n            margin: \"15px auto\"\n          },\n          onClick: sendMetamaskTx,\n          children: \"SendTX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), provider && !walletKey && !metamaskKey && keplrKey && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Connected account \", keplrKey]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\",\n            margin: \"15px auto\"\n          },\n          onClick: disconnectMetamask,\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\",\n            margin: \"15px auto\"\n          },\n          onClick: sendMetamaskTx,\n          children: \"SendTX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Built by\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://twitter.com/LeeUiHyeon\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          className: \"twitter-link\",\n          children: \"@LeeUiHyeon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zO58t+ylK9VY/r1u+LhKtuleHAs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","PublicKey","Transaction","Connection","LAMPORTS_PER_SOL","StakeProgram","Authorized","Lockup","WelldoneWalletAdapter","App","provider","setProvider","undefined","walletKey","setWalletKey","metamaskKey","setMetamaskKey","keplrKey","setKeplrKey","getProvider","window","solana","isPhantom","connectWallet","response","connect","console","log","publicKey","toString","err","disconnectWallet","disconnect","connectMetamask","ethereum","request","method","error","disconnectMetamask","params","eth_accounts","connectKeplr","keplr","chainId","enable","offLineSigner","getOfflineSigner","accounts","getAccounts","getStakeAccount","stakeAccountSeed","fromPublicKey","stakePubkey","createWithSeed","programId","sendTx","network","connection","RECENTBLOCKHASH","getLatestBlockhash","ACCOUNTPUBKEY","timeStamp","Date","getTime","STAKEACCOUNTSEED","votePubkey","transaction","recentBlockhash","blockhash","feePayer","add","createAccountWithSeed","fromPubkey","basePubkey","seed","authorized","lockup","lamports","Number","delegate","authorizedPubkey","signature","signAndSendTransaction","confirmTransaction","wallet","sendMetamaskTx","transactionParameters","from","selectedAddress","to","value","gasPrice","gas","txHash","fontSize","padding","fontWeight","borderRadius","margin"],"sources":["/Users/deepinthepowderblue/Documents/GitHub/testingWallet/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  PublicKey,\n  Transaction,\n  Connection,\n  LAMPORTS_PER_SOL,\n  StakeProgram,\n  Authorized,\n  Lockup,\n} from \"@solana/web3.js\";\n\n// import Web3  from \"web3\";\nimport { WelldoneWalletAdapter } from \"./welldone\";\nimport \"./App.css\";\n\n// const web3 = new Web3(\"https://ethereum-rinkeby-rpc.allthatnode.com\");\n\ntype DisplayEncoding = \"utf8\" | \"hex\";\ntype PhantomEvent = \"disconnect\" | \"connect\" | \"accountChanged\";\ntype PhantomRequestMethod =\n  | \"connect\"\n  | \"disconnect\"\n  | \"signTransaction\"\n  | \"signAllTransactions\"\n  | \"signMessage\";\n\ninterface ConnectOpts {\n  onlyIfTrusted: boolean;\n}\n\ninterface PhantomProvider {\n  publicKey: PublicKey | null;\n  isConnected: boolean | null;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\n  signMessage: (\n    message: Uint8Array | string,\n    display?: DisplayEncoding\n  ) => Promise<any>;\n  connect: (opts?: Partial<ConnectOpts>) => Promise<{ publicKey: PublicKey }>;\n  disconnect: () => Promise<void>;\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\n  request: (method: PhantomRequestMethod, params: any) => Promise<unknown>;\n}\n\nfunction App() {\n  const [provider, setProvider] = useState<PhantomProvider | undefined>(\n    undefined\n  );\n  const [walletKey, setWalletKey] = useState<PhantomProvider | undefined>(\n    undefined\n  );\n\n  const [metamaskKey, setMetamaskKey] = useState<string>();\n  const [keplrKey, setKeplrKey] = useState<string>();\n\n  /**\n   * @description gets Phantom provider, if it exists\n   */\n  const getProvider = (): PhantomProvider | undefined => {\n    if (\"solana\" in window) {\n      // @ts-ignore\n      const provider = window.solana as any;\n      if (provider.isPhantom) return provider as PhantomProvider;\n    }\n  };\n\n  /*\n   * @description prompts user to connect wallet if it exists\n   */\n  const connectWallet = async () => {\n    // @ts-ignore\n    const { solana } = window;\n\n    if (solana) {\n      try {\n        const response = await solana.connect();\n        console.log(\"wallet account \", response.publicKey.toString());\n        setWalletKey(response.publicKey.toString());\n      } catch (err) {\n        // { code: 4001, message: 'User rejected the request.' }\n      }\n    }\n  };\n\n  /*\n   * @description disconnect Phantom wallet\n   */\n  const disconnectWallet = async () => {\n    // @ts-ignore\n    const { solana } = window;\n\n    if (walletKey && solana) {\n      await (solana as PhantomProvider).disconnect();\n      setWalletKey(undefined);\n    }\n  };\n\n  const connectMetamask = async () => {\n    // @ts-ignore\n    const { ethereum } = window;\n\n    if (ethereum) {\n      try {\n        const response = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        console.log(response);\n        setMetamaskKey(response);\n      } catch (error) {}\n    }\n  };\n\n  const disconnectMetamask = async () => {\n    // @ts-ignore\n    const { ethereum } = window;\n\n    if (metamaskKey && ethereum) {\n      await ethereum.request({\n        method: \"eth_requestAccounts\",\n        params: [{ eth_accounts: {} }],\n      });\n      setMetamaskKey(undefined);\n    }\n  };\n\n  const connectKeplr = async () => {\n    // @ts-ignore\n    const { keplr } = window;\n\n    if (keplr) {\n      try {\n        const chainId = \"cosmoshub-4\";\n        await keplr.enable(chainId);\n        const offLineSigner = keplr.getOfflineSigner(chainId);\n        console.log(1111, offLineSigner);\n        const accounts = await offLineSigner.getAccounts();\n        console.log(1111, accounts);\n        console.log(accounts);\n        setKeplrKey(accounts);\n      } catch (error) {}\n    }\n  };\n\n  async function getStakeAccount(\n    stakeAccountSeed: string,\n    fromPublicKey: PublicKey\n  ) {\n    const stakePubkey = await PublicKey.createWithSeed(\n      fromPublicKey,\n      stakeAccountSeed,\n      StakeProgram.programId\n    );\n    // eslint-disable-next-line no-console\n    console.log(\"stakePubkey - \", stakePubkey.toString());\n    return stakePubkey;\n  }\n\n  const sendTx = async () => {\n    // @ts-ignore\n    const { solana } = window;\n\n    const network = \"https://api.devnet.solana.com\";\n    const connection = new Connection(network);\n    const RECENTBLOCKHASH = await connection.getLatestBlockhash();\n    const ACCOUNTPUBKEY = new PublicKey(\n      \"8cXTm3AgfW6xVduFzC64FW1Pjx6aPPmtNwySqVLLJRq7\"\n    );\n    const timeStamp = new Date().getTime();\n    const STAKEACCOUNTSEED = timeStamp.toString();\n    const stakePubkey = await getStakeAccount(STAKEACCOUNTSEED, ACCOUNTPUBKEY);\n    const votePubkey = new PublicKey(\n      \"3NZ1Wa2spvK6dpbVBhgTh2qfjzNA6wxEAdXMsJJQCDQG\"\n    );\n    const transaction = new Transaction({\n      recentBlockhash: RECENTBLOCKHASH.blockhash,\n      feePayer: ACCOUNTPUBKEY,\n    });\n    transaction.add(\n      StakeProgram.createAccountWithSeed({\n        fromPubkey: ACCOUNTPUBKEY,\n        stakePubkey: stakePubkey,\n        basePubkey: ACCOUNTPUBKEY,\n        seed: STAKEACCOUNTSEED,\n        authorized: new Authorized(ACCOUNTPUBKEY, ACCOUNTPUBKEY),\n        lockup: new Lockup(0, 0, new PublicKey(0)),\n        lamports: Number(0.1) * LAMPORTS_PER_SOL,\n      }),\n      // Delegate\n      StakeProgram.delegate({\n        stakePubkey: stakePubkey,\n        authorizedPubkey: ACCOUNTPUBKEY,\n        votePubkey: votePubkey,\n      })\n    );\n\n    if (walletKey && solana) {\n      const { signature } = await solana.signAndSendTransaction(transaction);\n      await connection.confirmTransaction(signature);\n      const wallet = new WelldoneWalletAdapter();\n      // await wallet.connect();\n      await wallet.signAndSendTransaction(transaction);\n    }\n  };\n\n  const sendMetamaskTx = async () => {\n    // @ts-ignore\n    const { ethereum } = window;\n\n    try {\n      const transactionParameters = {\n        from: ethereum.selectedAddress,\n        to: ethereum.selectedAddress,\n        value: Number(30000000000000000).toString(16),\n        gasPrice: Number(\"3000000000000\").toString(16),\n        gas: \"0x2710\",\n        // data: '',\n      };\n\n      const txHash = await ethereum.request({\n        method: \"eth_sendTransaction\",\n        params: [transactionParameters],\n      });\n\n      console.log(119, txHash);\n    } catch (error) {}\n  };\n\n  // detect phantom provider exists\n  useEffect(() => {\n    const provider = getProvider();\n\n    if (provider) setProvider(provider);\n    else setProvider(undefined);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Tutorial: Connect to Wallet</h2>\n        {provider && !walletKey && !metamaskKey && (\n          <>\n            <button\n              style={{\n                fontSize: \"16px\",\n                padding: \"15px\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n              }}\n              onClick={connectWallet}\n            >\n              Connect to Phantom Wallet\n            </button>\n            <button\n              style={{\n                fontSize: \"16px\",\n                padding: \"15px\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n              }}\n              onClick={connectMetamask}\n            >\n              Connect to Meta mask\n            </button>\n            <button\n              style={{\n                fontSize: \"16px\",\n                padding: \"15px\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n              }}\n              onClick={connectKeplr}\n            >\n              Connect to keplr\n            </button>\n          </>\n        )}\n\n        {provider && walletKey && !metamaskKey && (\n          <div>\n            <p>\n              <>Connected account {walletKey}</>\n            </p>\n\n            <button\n              style={{\n                fontSize: \"16px\",\n                padding: \"15px\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n                margin: \"15px auto\",\n              }}\n              onClick={disconnectWallet}\n            >\n              Disconnect\n            </button>\n            <button\n              style={{\n                fontSize: \"16px\",\n                padding: \"15px\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n                margin: \"15px auto\",\n              }}\n              onClick={sendTx}\n            >\n              SendTX\n            </button>\n          </div>\n        )}\n        {provider && !walletKey && metamaskKey && !keplrKey && (\n          <div>\n            <p>\n              <>Connected account {metamaskKey}</>\n            </p>\n\n            <button\n              style={{\n                fontSize: \"16px\",\n                padding: \"15px\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n                margin: \"15px auto\",\n              }}\n              onClick={disconnectMetamask}\n            >\n              Disconnect\n            </button>\n            <button\n              style={{\n                fontSize: \"16px\",\n                padding: \"15px\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n                margin: \"15px auto\",\n              }}\n              onClick={sendMetamaskTx}\n            >\n              SendTX\n            </button>\n          </div>\n        )}\n\n        {provider && !walletKey && !metamaskKey && keplrKey && (\n          <div>\n            <p>\n              <>Connected account {keplrKey}</>\n            </p>\n\n            <button\n              style={{\n                fontSize: \"16px\",\n                padding: \"15px\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n                margin: \"15px auto\",\n              }}\n              onClick={disconnectMetamask}\n            >\n              Disconnect\n            </button>\n            <button\n              style={{\n                fontSize: \"16px\",\n                padding: \"15px\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n                margin: \"15px auto\",\n              }}\n              onClick={sendMetamaskTx}\n            >\n              SendTX\n            </button>\n          </div>\n        )}\n\n        <p>\n          Built by{\" \"}\n          <a\n            href=\"https://twitter.com/LeeUiHyeon\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"twitter-link\"\n          >\n            @LeeUiHyeon\n          </a>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}