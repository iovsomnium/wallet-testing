{"ast":null,"code":"var _jsxFileName = \"/Users/deepinthepowderblue/Documents/GitHub/testingWallet/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { PublicKey, Transaction, Connection, LAMPORTS_PER_SOL, StakeProgram, Authorized, Lockup } from \"@solana/web3.js\";\nimport { WelldoneWalletAdapter } from './welldone';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [provider, setProvider] = useState(undefined);\n  const [walletKey, setWalletKey] = useState(undefined);\n  const [metamaskKey, setMetamaskKey] = useState();\n  /**\n   * @description gets Phantom provider, if it exists\n   */\n\n  const getProvider = () => {\n    if (\"solana\" in window) {\n      // @ts-ignore\n      const provider = window.solana;\n      if (provider.isPhantom) return provider;\n    }\n  };\n  /*\n   * @description prompts user to connect wallet if it exists\n   */\n\n\n  const connectWallet = async () => {\n    // @ts-ignore\n    const {\n      solana\n    } = window;\n\n    if (solana) {\n      try {\n        const response = await solana.connect();\n        console.log(\"wallet account \", response.publicKey.toString());\n        setWalletKey(response.publicKey.toString());\n      } catch (err) {// { code: 4001, message: 'User rejected the request.' }\n      }\n    }\n  };\n  /*\n   * @description disconnect Phantom wallet\n   */\n\n\n  const disconnectWallet = async () => {\n    // @ts-ignore\n    const {\n      solana\n    } = window;\n\n    if (walletKey && solana) {\n      await solana.disconnect();\n      setWalletKey(undefined);\n    }\n  };\n\n  const connectMetamask = async () => {\n    // @ts-ignore\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      try {\n        const response = await ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        console.log(response);\n        setMetamaskKey(response);\n      } catch (error) {}\n    }\n  };\n\n  async function getStakeAccount(stakeAccountSeed, fromPublicKey) {\n    const stakePubkey = await PublicKey.createWithSeed(fromPublicKey, stakeAccountSeed, StakeProgram.programId); // eslint-disable-next-line no-console\n\n    console.log(\"stakePubkey - \", stakePubkey.toString());\n    return stakePubkey;\n  }\n\n  const sendTx = async () => {\n    // @ts-ignore\n    const {\n      solana\n    } = window;\n    const network = \"https://api.devnet.solana.com\";\n    const connection = new Connection(network);\n    const RECENTBLOCKHASH = await connection.getLatestBlockhash();\n    const ACCOUNTPUBKEY = new PublicKey(\"8cXTm3AgfW6xVduFzC64FW1Pjx6aPPmtNwySqVLLJRq7\");\n    const timeStamp = new Date().getTime();\n    const STAKEACCOUNTSEED = timeStamp.toString();\n    const stakePubkey = await getStakeAccount(STAKEACCOUNTSEED, ACCOUNTPUBKEY);\n    const votePubkey = new PublicKey(\"3NZ1Wa2spvK6dpbVBhgTh2qfjzNA6wxEAdXMsJJQCDQG\");\n    const transaction = new Transaction({\n      recentBlockhash: RECENTBLOCKHASH.blockhash,\n      feePayer: ACCOUNTPUBKEY\n    });\n    transaction.add(StakeProgram.createAccountWithSeed({\n      fromPubkey: ACCOUNTPUBKEY,\n      stakePubkey: stakePubkey,\n      basePubkey: ACCOUNTPUBKEY,\n      seed: STAKEACCOUNTSEED,\n      authorized: new Authorized(ACCOUNTPUBKEY, ACCOUNTPUBKEY),\n      lockup: new Lockup(0, 0, new PublicKey(0)),\n      lamports: Number(0.1) * LAMPORTS_PER_SOL\n    }), // Delegate\n    StakeProgram.delegate({\n      stakePubkey: stakePubkey,\n      authorizedPubkey: ACCOUNTPUBKEY,\n      votePubkey: votePubkey\n    }));\n\n    if (walletKey && solana) {\n      const {\n        signature\n      } = await solana.signAndSendTransaction(transaction);\n      await connection.confirmTransaction(signature);\n      const wallet = new WelldoneWalletAdapter(); // await wallet.connect();\n\n      await wallet.signAndSendTransaction(transaction);\n    }\n  }; // detect phantom provider exists\n\n\n  useEffect(() => {\n    const provider = getProvider();\n    if (provider) setProvider(provider);else setProvider(undefined);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Tutorial: Connect to Phantom Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), provider && !walletKey && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\"\n          },\n          onClick: connectWallet,\n          children: \"Connect to Phantom Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\"\n          },\n          onClick: connectMetamask,\n          children: \"Connect to Meta mask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true), provider && walletKey && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Connected account \", walletKey]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\",\n            margin: \"15px auto\"\n          },\n          onClick: disconnectWallet,\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            fontSize: \"16px\",\n            padding: \"15px\",\n            fontWeight: \"bold\",\n            borderRadius: \"5px\",\n            margin: \"15px auto\"\n          },\n          onClick: sendTx,\n          children: \"SendTX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), !provider && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No provider found. Install\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://phantom.app/\",\n          children: \"Phantom Browser extension\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Built by\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://twitter.com/LeeUiHyeon\",\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          className: \"twitter-link\",\n          children: \"@LeeUiHyeon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bqf/JDhXzWnWoDu1dm+e84Z6bJI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","PublicKey","Transaction","Connection","LAMPORTS_PER_SOL","StakeProgram","Authorized","Lockup","WelldoneWalletAdapter","App","provider","setProvider","undefined","walletKey","setWalletKey","metamaskKey","setMetamaskKey","getProvider","window","solana","isPhantom","connectWallet","response","connect","console","log","publicKey","toString","err","disconnectWallet","disconnect","connectMetamask","ethereum","request","method","error","getStakeAccount","stakeAccountSeed","fromPublicKey","stakePubkey","createWithSeed","programId","sendTx","network","connection","RECENTBLOCKHASH","getLatestBlockhash","ACCOUNTPUBKEY","timeStamp","Date","getTime","STAKEACCOUNTSEED","votePubkey","transaction","recentBlockhash","blockhash","feePayer","add","createAccountWithSeed","fromPubkey","basePubkey","seed","authorized","lockup","lamports","Number","delegate","authorizedPubkey","signature","signAndSendTransaction","confirmTransaction","wallet","fontSize","padding","fontWeight","borderRadius","margin"],"sources":["/Users/deepinthepowderblue/Documents/GitHub/testingWallet/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { PublicKey, Transaction, Connection, LAMPORTS_PER_SOL, StakeProgram, Authorized, Lockup } from \"@solana/web3.js\";\n\nimport { WelldoneWalletAdapter } from './welldone';\nimport \"./App.css\";\n\ntype DisplayEncoding = \"utf8\" | \"hex\";\ntype PhantomEvent = \"disconnect\" | \"connect\" | \"accountChanged\";\ntype PhantomRequestMethod =\n  | \"connect\"\n  | \"disconnect\"\n  | \"signTransaction\"\n  | \"signAllTransactions\"\n  | \"signMessage\";\n\ninterface ConnectOpts {\n  onlyIfTrusted: boolean;\n}\n\ninterface PhantomProvider {\n  publicKey: PublicKey | null;\n  isConnected: boolean | null;\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\n  signMessage: (\n    message: Uint8Array | string,\n    display?: DisplayEncoding\n  ) => Promise<any>;\n  connect: (opts?: Partial<ConnectOpts>) => Promise<{ publicKey: PublicKey }>;\n  disconnect: () => Promise<void>;\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\n  request: (method: PhantomRequestMethod, params: any) => Promise<unknown>;\n}\n\nfunction App() {\n  const [provider, setProvider] = useState<PhantomProvider | undefined>(\n    undefined\n  );\n  const [walletKey, setWalletKey] = useState<PhantomProvider | undefined>(\n    undefined\n  );\n\n  const [metamaskKey, setMetamaskKey] = useState<string>();\n\n  /**\n   * @description gets Phantom provider, if it exists\n   */\n  const getProvider = (): PhantomProvider | undefined => {\n    if (\"solana\" in window) {\n      // @ts-ignore\n      const provider = window.solana as any;\n      if (provider.isPhantom) return provider as PhantomProvider;\n    }\n  };\n\n  /*\n   * @description prompts user to connect wallet if it exists\n   */\n  const connectWallet = async () => {\n    // @ts-ignore\n    const { solana } = window;\n\n    if (solana) {\n      try {\n        const response = await solana.connect();\n        console.log(\"wallet account \", response.publicKey.toString());\n        setWalletKey(response.publicKey.toString());\n      } catch (err) {\n        // { code: 4001, message: 'User rejected the request.' }\n      }\n    }\n  };\n\n  /*\n   * @description disconnect Phantom wallet\n   */\n  const disconnectWallet = async () => {\n    // @ts-ignore\n    const { solana } = window;\n\n    if (walletKey && solana) {\n      await (solana as PhantomProvider).disconnect();\n      setWalletKey(undefined);\n    }\n  };\n\n  const connectMetamask = async () => {\n    // @ts-ignore\n    const { ethereum } = window;\n\n    if(ethereum) {\n      try {\n        const response = await ethereum.request({method: \"eth_requestAccounts\"});\n        console.log(response);\n        setMetamaskKey(response);\n      } catch (error) {\n        \n      }\n    }\n  }\n\n  async function getStakeAccount(stakeAccountSeed: string, fromPublicKey: PublicKey) {\n  const stakePubkey = await PublicKey.createWithSeed(\n    fromPublicKey,\n    stakeAccountSeed,\n    StakeProgram.programId\n  );\n  // eslint-disable-next-line no-console\n  console.log(\"stakePubkey - \", stakePubkey.toString());\n  return stakePubkey;\n}\n\n  const sendTx = async () => { \n    // @ts-ignore\n    const { solana } = window;\n\n    const network = \"https://api.devnet.solana.com\"\n    const connection = new Connection(network);\n    const RECENTBLOCKHASH = await connection.getLatestBlockhash();\n    const ACCOUNTPUBKEY = new PublicKey(\"8cXTm3AgfW6xVduFzC64FW1Pjx6aPPmtNwySqVLLJRq7\");\n    const timeStamp = new Date().getTime();\n    const STAKEACCOUNTSEED = timeStamp.toString();\n    const stakePubkey = await getStakeAccount(STAKEACCOUNTSEED, ACCOUNTPUBKEY);\n    const votePubkey = new PublicKey(\"3NZ1Wa2spvK6dpbVBhgTh2qfjzNA6wxEAdXMsJJQCDQG\");\n    const transaction = new Transaction({\n      recentBlockhash: RECENTBLOCKHASH.blockhash,\n      feePayer: ACCOUNTPUBKEY,\n    });\n    transaction.add(\n    StakeProgram.createAccountWithSeed(\n      {\n        fromPubkey: ACCOUNTPUBKEY,\n        stakePubkey: stakePubkey,\n        basePubkey: ACCOUNTPUBKEY,\n        seed: STAKEACCOUNTSEED,\n        authorized: new Authorized(ACCOUNTPUBKEY, ACCOUNTPUBKEY),\n        lockup: new Lockup(0, 0, new PublicKey(0)),\n        lamports: Number(0.1) * LAMPORTS_PER_SOL\n      }\n    ),\n    // Delegate\n    StakeProgram.delegate(\n      {\n        stakePubkey: stakePubkey,\n        authorizedPubkey: ACCOUNTPUBKEY,\n        votePubkey: votePubkey\n      }\n    )\n    );\n\n\n    if (walletKey && solana) { \n      const { signature } = await solana.signAndSendTransaction(transaction);\n      await connection.confirmTransaction(signature);\n      const wallet = new WelldoneWalletAdapter();\n      // await wallet.connect();\n      await wallet.signAndSendTransaction(transaction);\n    }\n  }\n\n  // detect phantom provider exists\n  useEffect(() => {\n    const provider = getProvider();\n\n    if (provider) setProvider(provider);\n    else setProvider(undefined);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Tutorial: Connect to Phantom Wallet</h2>\n        {provider && !walletKey && (\n          <><button\n            style={{\n              fontSize: \"16px\",\n              padding: \"15px\",\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n            }}\n            onClick={connectWallet}\n          >\n            Connect to Phantom Wallet\n          </button><button\n            style={{\n              fontSize: \"16px\",\n              padding: \"15px\",\n              fontWeight: \"bold\",\n              borderRadius: \"5px\",\n            }}\n            onClick={connectMetamask}\n          >\n              Connect to Meta mask\n            </button></>\n        )}\n\n        {provider && walletKey && (\n          <div>\n            <p><>Connected account {walletKey}</></p>\n\n            <button\n              style={{\n                fontSize: \"16px\",\n                padding: \"15px\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n                margin: \"15px auto\",\n              }}\n              onClick={disconnectWallet}\n            >\n              Disconnect\n            </button>\n              <button\n              style={{\n                fontSize: \"16px\",\n                padding: \"15px\",\n                fontWeight: \"bold\",\n                borderRadius: \"5px\",\n                margin: \"15px auto\",\n              }}\n              onClick={sendTx}\n            >\n              SendTX\n            </button>\n          </div>\n        )}\n\n        {!provider && (\n          <p>\n            No provider found. Install{\" \"}\n            <a href=\"https://phantom.app/\">Phantom Browser extension</a>\n          </p>\n        )}\n\n        <p>\n          Built by{\" \"}\n          <a\n            href=\"https://twitter.com/LeeUiHyeon\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"twitter-link\"\n          >\n            @LeeUiHyeon\n          </a>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,gBAA7C,EAA+DC,YAA/D,EAA6EC,UAA7E,EAAyFC,MAAzF,QAAuG,iBAAvG;AAEA,SAASC,qBAAT,QAAsC,YAAtC;AACA,OAAO,WAAP;;;;AA8BA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CACtCY,SADsC,CAAxC;EAGA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CACxCY,SADwC,CAA1C;EAIA,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,EAA9C;EAEA;AACF;AACA;;EACE,MAAMiB,WAAW,GAAG,MAAmC;IACrD,IAAI,YAAYC,MAAhB,EAAwB;MACtB;MACA,MAAMR,QAAQ,GAAGQ,MAAM,CAACC,MAAxB;MACA,IAAIT,QAAQ,CAACU,SAAb,EAAwB,OAAOV,QAAP;IACzB;EACF,CAND;EAQA;AACF;AACA;;;EACE,MAAMW,aAAa,GAAG,YAAY;IAChC;IACA,MAAM;MAAEF;IAAF,IAAaD,MAAnB;;IAEA,IAAIC,MAAJ,EAAY;MACV,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMH,MAAM,CAACI,OAAP,EAAvB;QACAC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,QAAQ,CAACI,SAAT,CAAmBC,QAAnB,EAA/B;QACAb,YAAY,CAACQ,QAAQ,CAACI,SAAT,CAAmBC,QAAnB,EAAD,CAAZ;MACD,CAJD,CAIE,OAAOC,GAAP,EAAY,CACZ;MACD;IACF;EACF,CAbD;EAeA;AACF;AACA;;;EACE,MAAMC,gBAAgB,GAAG,YAAY;IACnC;IACA,MAAM;MAAEV;IAAF,IAAaD,MAAnB;;IAEA,IAAIL,SAAS,IAAIM,MAAjB,EAAyB;MACvB,MAAOA,MAAD,CAA4BW,UAA5B,EAAN;MACAhB,YAAY,CAACF,SAAD,CAAZ;IACD;EACF,CARD;;EAUA,MAAMmB,eAAe,GAAG,YAAY;IAClC;IACA,MAAM;MAAEC;IAAF,IAAed,MAArB;;IAEA,IAAGc,QAAH,EAAa;MACX,IAAI;QACF,MAAMV,QAAQ,GAAG,MAAMU,QAAQ,CAACC,OAAT,CAAiB;UAACC,MAAM,EAAE;QAAT,CAAjB,CAAvB;QACAV,OAAO,CAACC,GAAR,CAAYH,QAAZ;QACAN,cAAc,CAACM,QAAD,CAAd;MACD,CAJD,CAIE,OAAOa,KAAP,EAAc,CAEf;IACF;EACF,CAbD;;EAeA,eAAeC,eAAf,CAA+BC,gBAA/B,EAAyDC,aAAzD,EAAmF;IACnF,MAAMC,WAAW,GAAG,MAAMtC,SAAS,CAACuC,cAAV,CACxBF,aADwB,EAExBD,gBAFwB,EAGxBhC,YAAY,CAACoC,SAHW,CAA1B,CADmF,CAMnF;;IACAjB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bc,WAAW,CAACZ,QAAZ,EAA9B;IACA,OAAOY,WAAP;EACD;;EAEC,MAAMG,MAAM,GAAG,YAAY;IACzB;IACA,MAAM;MAAEvB;IAAF,IAAaD,MAAnB;IAEA,MAAMyB,OAAO,GAAG,+BAAhB;IACA,MAAMC,UAAU,GAAG,IAAIzC,UAAJ,CAAewC,OAAf,CAAnB;IACA,MAAME,eAAe,GAAG,MAAMD,UAAU,CAACE,kBAAX,EAA9B;IACA,MAAMC,aAAa,GAAG,IAAI9C,SAAJ,CAAc,8CAAd,CAAtB;IACA,MAAM+C,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;IACA,MAAMC,gBAAgB,GAAGH,SAAS,CAACrB,QAAV,EAAzB;IACA,MAAMY,WAAW,GAAG,MAAMH,eAAe,CAACe,gBAAD,EAAmBJ,aAAnB,CAAzC;IACA,MAAMK,UAAU,GAAG,IAAInD,SAAJ,CAAc,8CAAd,CAAnB;IACA,MAAMoD,WAAW,GAAG,IAAInD,WAAJ,CAAgB;MAClCoD,eAAe,EAAET,eAAe,CAACU,SADC;MAElCC,QAAQ,EAAET;IAFwB,CAAhB,CAApB;IAIAM,WAAW,CAACI,GAAZ,CACApD,YAAY,CAACqD,qBAAb,CACE;MACEC,UAAU,EAAEZ,aADd;MAEER,WAAW,EAAEA,WAFf;MAGEqB,UAAU,EAAEb,aAHd;MAIEc,IAAI,EAAEV,gBAJR;MAKEW,UAAU,EAAE,IAAIxD,UAAJ,CAAeyC,aAAf,EAA8BA,aAA9B,CALd;MAMEgB,MAAM,EAAE,IAAIxD,MAAJ,CAAW,CAAX,EAAc,CAAd,EAAiB,IAAIN,SAAJ,CAAc,CAAd,CAAjB,CANV;MAOE+D,QAAQ,EAAEC,MAAM,CAAC,GAAD,CAAN,GAAc7D;IAP1B,CADF,CADA,EAYA;IACAC,YAAY,CAAC6D,QAAb,CACE;MACE3B,WAAW,EAAEA,WADf;MAEE4B,gBAAgB,EAAEpB,aAFpB;MAGEK,UAAU,EAAEA;IAHd,CADF,CAbA;;IAuBA,IAAIvC,SAAS,IAAIM,MAAjB,EAAyB;MACvB,MAAM;QAAEiD;MAAF,IAAgB,MAAMjD,MAAM,CAACkD,sBAAP,CAA8BhB,WAA9B,CAA5B;MACA,MAAMT,UAAU,CAAC0B,kBAAX,CAA8BF,SAA9B,CAAN;MACA,MAAMG,MAAM,GAAG,IAAI/D,qBAAJ,EAAf,CAHuB,CAIvB;;MACA,MAAM+D,MAAM,CAACF,sBAAP,CAA8BhB,WAA9B,CAAN;IACD;EACF,CA9CD,CA9Ea,CA8Hb;;;EACAtD,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAGO,WAAW,EAA5B;IAEA,IAAIP,QAAJ,EAAcC,WAAW,CAACD,QAAD,CAAX,CAAd,KACKC,WAAW,CAACC,SAAD,CAAX;EACN,CALQ,EAKN,EALM,CAAT;EAOA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAQ,SAAS,EAAC,YAAlB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGF,QAAQ,IAAI,CAACG,SAAb,iBACC;QAAA,wBAAE;UACA,KAAK,EAAE;YACL2D,QAAQ,EAAE,MADL;YAELC,OAAO,EAAE,MAFJ;YAGLC,UAAU,EAAE,MAHP;YAILC,YAAY,EAAE;UAJT,CADP;UAOA,OAAO,EAAEtD,aAPT;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAF,eAUS;UACP,KAAK,EAAE;YACLmD,QAAQ,EAAE,MADL;YAELC,OAAO,EAAE,MAFJ;YAGLC,UAAU,EAAE,MAHP;YAILC,YAAY,EAAE;UAJT,CADA;UAOP,OAAO,EAAE5C,eAPF;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAVT;MAAA,gBAHJ,EA0BGrB,QAAQ,IAAIG,SAAZ,iBACC;QAAA,wBACE;UAAA,uBAAG;YAAA,iCAAqBA,SAArB;UAAA;QAAH;UAAA;UAAA;UAAA;QAAA,QADF,eAGE;UACE,KAAK,EAAE;YACL2D,QAAQ,EAAE,MADL;YAELC,OAAO,EAAE,MAFJ;YAGLC,UAAU,EAAE,MAHP;YAILC,YAAY,EAAE,KAJT;YAKLC,MAAM,EAAE;UALH,CADT;UAQE,OAAO,EAAE/C,gBARX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAeI;UACA,KAAK,EAAE;YACL2C,QAAQ,EAAE,MADL;YAELC,OAAO,EAAE,MAFJ;YAGLC,UAAU,EAAE,MAHP;YAILC,YAAY,EAAE,KAJT;YAKLC,MAAM,EAAE;UALH,CADP;UAQA,OAAO,EAAElC,MART;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAfJ;MAAA;QAAA;QAAA;QAAA;MAAA,QA3BJ,EAyDG,CAAChC,QAAD,iBACC;QAAA,yCAC6B,GAD7B,eAEE;UAAG,IAAI,EAAC,sBAAR;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QA1DJ,eAgEE;QAAA,uBACW,GADX,eAEE;UACE,IAAI,EAAC,gCADP;UAEE,MAAM,EAAC,QAFT;UAGE,GAAG,EAAC,YAHN;UAIE,SAAS,EAAC,cAJZ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAhEF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgFD;;GAtNQD,G;;KAAAA,G;AAwNT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}